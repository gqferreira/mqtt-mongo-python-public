name: "DEV DEPLOY"

on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Run unit tests with Docker Compose
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Notify Start
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "üß™ *Unit tests started* for repository ${{ github.repository }} on branch ${{ github.ref_name }}",
            "attachments": [
              {
                "color": "#36a64f",
                "fields": [
                  { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                  { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                  { "title": "Author", "value": "${{ github.actor }}", "short": true },
                  { "title": "Commit", "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>", "short": false },
                  { "title": "Message", "value": "${{ github.event.head_commit.message }}", "short": false },
                  { "title": "GitHub Action", "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View pipeline>", "short": false }
                ]
              }
            ]
          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Run unit tests with Docker Compose
        run: |
          docker compose -f docker-compose.dev.yml -f docker-compose.override.test.yml up --abort-on-container-exit --exit-code-from app-telemetry

      - name: Remove containers
        if: always()
        run: docker compose -f docker-compose.dev.yml -f docker-compose.override.test.yml down

      - name: Success unit tests
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üß™ ‚úÖ Unit tests completed successfully for repository ${{ github.repository }} on branch ${{ github.ref_name }}!"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Failure unit tests
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üß™ ‚ùå Unit tests failed for repository ${{ github.repository }} on branch ${{ github.ref_name }}!"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  terraform:
    needs: test
    uses: ./.github/workflows/terraform.yml
    with:
      environment: dev
      branch: "develop"
      aws-assume-role-arn: "<arn of your role>"
      aws-region: "<your region>"
      aws-statefile-s3-bucket: "<your bucket>"
      aws-lock-dynamodb-table: "<your table>"
    secrets: inherit